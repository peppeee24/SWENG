# .github/workflows/build-executable.yml
# GitHub Action per creare automaticamente un eseguibile
name: Build Executable Fixed

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '20.19.0'

jobs:
  build-backend:
    name: Build Backend Executable
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Verify project structure
        run: |
          echo "Project structure:"
          find . -name "pom.xml" -type f
          ls -la backend/sweng/

      - name: Build Spring Boot JAR
        working-directory: ./backend/sweng
        run: |
          mvn clean package -DskipTests
          ls -la target/

      - name: Rename JAR file
        working-directory: ./backend/sweng/target
        run: |
          JAR_FILE=$(ls *.jar | grep -v sources | grep -v javadoc | head -1)
          echo "Using JAR: $JAR_FILE"
          cp "$JAR_FILE" nota-bene-backend-executable.jar

      - name: Upload Backend Executable
        uses: actions/upload-artifact@v4
        with:
          name: nota-bene-backend-jar
          path: backend/sweng/target/nota-bene-backend-executable.jar
          retention-days: 30

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify frontend structure
        run: |
          find . -name "package.json" -type f
          if [ -f "frontend/package.json" ]; then
            echo "package.json found"
          else
            echo "ERROR: package.json not found"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Angular CLI
        working-directory: ./frontend
        run: npm install @angular/cli

      - name: Build Angular production
        working-directory: ./frontend
        run: npx ng build --configuration=production

      - name: Archive frontend dist
        working-directory: ./frontend
        run: |
          if [ -d "dist/frontend" ]; then
            tar -czf nota-bene-frontend-dist.tar.gz -C dist/frontend .
          else
            tar -czf nota-bene-frontend-dist.tar.gz -C dist .
          fi

      - name: Upload Frontend Build
        uses: actions/upload-artifact@v4
        with:
          name: nota-bene-frontend-dist
          path: frontend/nota-bene-frontend-dist.tar.gz
          retention-days: 30

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: nota-bene-backend-jar

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: nota-bene-frontend-dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            nota-bene-backend-executable.jar
            nota-bene-frontend-dist.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
