# .github/workflows/build-executable.yml
# GitHub Action per creare automaticamente un eseguibile
name: Build Executable

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  build-backend:
    name: Build Backend Executable
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build Spring Boot JAR
        working-directory: ./backend/sweng
        run: |
          echo "Building executable JAR..."
          mvn clean package -DskipTests

      - name: Rename JAR file
        working-directory: ./backend/sweng/target
        run: |
          mv nota-bene-backend-*.jar nota-bene-backend-executable.jar

      - name: Upload Backend Executable
        uses: actions/upload-artifact@v4
        with:
          name: nota-bene-backend-jar
          path: backend/sweng/target/nota-bene-backend-executable.jar
          retention-days: 30

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build Angular application
        working-directory: ./frontend
        run: |
          echo "Building Angular production build..."
          npm run build --prod

      - name: Create Frontend Archive
        working-directory: ./frontend
        run: |
          cd dist
          tar -czf ../nota-bene-frontend-dist.tar.gz ./*

      - name: Upload Frontend Build
        uses: actions/upload-artifact@v4
        with:
          name: nota-bene-frontend-dist
          path: frontend/nota-bene-frontend-dist.tar.gz
          retention-days: 30

  # Job combinato per creare una release se Ã¨ un tag
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: nota-bene-backend-jar

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: nota-bene-frontend-dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            nota-bene-backend-executable.jar
            nota-bene-frontend-dist.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}